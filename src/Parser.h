// Generated by Bisonc++ V4.01.00 on Fri, 20 Mar 2020 04:37:13 +0100

#ifndef Parser_h_included
#define Parser_h_included

// $insert baseclass
#include "Parserbase.h"
#include <FlexLexer.h>

#undef Parser
class Parser: public ParserBase
{
        
    public:
	Parser(std::istream& inFile) : d_scanner( &inFile, &std::cerr ){}
        int parse();
		yyFlexLexer d_scanner;
		
    private:

	std::map<std::string,var_data> symbol_table;
        void error(char const *msg);    // called on (syntax) errors
        int lex();                      // returns the next token from the
                                        // lexical scanner. 
        void print();                   // use, e.g., d_token, d_loc
		
    // support functions for parse():
        void executeAction(int ruleNr);
        void errorRecovery();
        int lookup(bool recovery);
        void nextToken();
        void print__();
};


#endif
